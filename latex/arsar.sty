\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{arsar}[2025/01/11 Custom template]

\RequirePackage{ltablex}
\RequirePackage{babel}
% load datetime2 after babel/polyglossia
\RequirePackage[useregional]{datetime2}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Display string (can be translated)
%
\newcommand{\gitlogname}{Git log}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Texte d'affichage (traduction fran√ßaise)
%
\addto\captionsfrench{
	\renewcommand{\gitlogname}{Journal git}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Function to load file generated by the Makefile
%
% \inputMake{filaneme} -- input le filename or require for a make to latexmk
\newcommand\inputMake[1]{\InputIfFileExists{#1}{\expandafter}{\typeout{No file #1.}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Information load from Makefile
%
\def\datename{lastcommit}
\inputMake{_dyn/git-date-lastcommit}
\def\datename{git}
\inputMake{_dyn/git-date}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \gitlog
%
% TODO: write documentation
% TODO: translate
%
\newcommand\startgitlogEntry{%
	\gdef\gitlog@hash{no}%
	\gdef\gitlog@tag{}%
	\gdef\gitlog@authorname{}%
	\gdef\gitlog@authormail{}%
	\gdef\gitlog@date{}%
	\gdef\gitlog@message{}%
	\gdef\gitlog@countfile{?}%
	\gdef\gitlog@countadd{?}%
	\gdef\gitlog@countdel{?}%
	\gdef\gitlog@signcode{-}%
	\gdef\gitlog@signauthorname{}%
	\gdef\gitlog@signauthormail{}%
	\gdef\gitlog@signkey{}%
	\gdef\gitlog@signfingerprint{}%
	\gdef\gitlog@signprimarykey{}%
}
\newcommand\betweengitlogEntry{\\\hline}
\newcommand\stopgitlogEntry{%
	\gitlog@hash & %
	\gitlog@tag & %
	\gitlog@authorname & %
	\gitlog@signcode & %
	\gitlog@date & %
	\gitlog@message & %
	\gitlog@countfile & %
	\gitlog@countadd & %
	\gitlog@countdel%
}


\newcommand\gitlogHash[2][]{\gdef\gitlog@hash{#2}}
\newcommand\gitlogAuthor[2]{\gdef\gitlog@authorname{#1}\gdef\gitlog@authormail{#2}}
\newcommand\gitlogTagVersion[1]{\gdef\gitlog@tag{#1}}
\newcommand\gitlogNoTagVersion{}
\newcommand\gitlogTag[1]{}
\newcommand\gitlogDateTime[8]{\gdef\gitlog@date{#1-#2-#3}}
\newcommand\gitlogMessage[2]{\gdef\gitlog@message{#1}}
\newcommand\gitlogFixes[2][]{FIXES}
\newcommand\gitlogChanges[3]{\gdef\gitlog@countfile{#1}\gdef\gitlog@countadd{#2}\gdef\gitlog@countdel{#3}}
\newcommand\gitlogSign[6]{%
	\gdef\gitlog@signcode{#1}%
	\gdef\gitlog@signauthorname{#2}%
	\gdef\gitlog@signauthormail{#3}%
	\gdef\gitlog@signkey{#4}%
	\gdef\gitlog@signfingerprint{#5}%
	\gdef\gitlog@signprimarykey{#6}%
}

\newcommand\gitlog{
	\chapter{\gitlogname}
	\begin{tabularx}{\linewidth}{|c|c|c|c|c|X|r|r|r|}%
		\hline%
		\textbf{hash} & \textbf{version} & \textbf{author} & \textbf{S} & \textbf{date} & \textbf{commit message} & \textbf{MF*} & \textbf{ADD*} & \textbf{DEL*} \\%
		\hline%
		\endhead%
		\hline \multicolumn{9}{|l|}{* MF = Number of modified files; ADD/DEL Number of line added/deleted. \hfill continue on next page} %
		\\ %
		\hline
		\endfoot
		\hline
		\hline \multicolumn{9}{|l|}{* MF = Number of modified files; ADD/DEL Number of line added/deleted.} %
		\\ %
		\hline
		\endlastfoot
		\inputMake{_dyn/git-log}%
	\end{tabularx}
}


%\newcommand\gitlogHash[2][]{\paragraph{#2}}
%\newcommand\gitlogTagVersion[1]{version(#1)}
%\newcommand\gitlogNoTagVersion{pas de version pour ce commit}
%\newcommand\gitlogTag[1]{tag(#1)}
%\newcommand\gitlogDateTime[8]{dt #1-#2-#3 #4:#5:#6 + #7:#8}
%\newcommand\gitlogMessage[2]{\textbf{#1} #2}
%\newcommand\gitlogFixes[2][]{Fixes issue #2 in repo '#1'}
%\newcommand\gitlogChanges[3]{#1 file changes, #2 added lines, #3 deleted lines}

